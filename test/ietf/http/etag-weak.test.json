{
  "x-license": "https://github.com/sourcemeta/std/blob/main/LICENSE",
  "target": "../../../schemas/ietf/http/etag-weak.json",
  "tests": [
    {
      "description": "Invalid type - number",
      "data": 123,
      "valid": false
    },
    {
      "description": "Invalid type - boolean",
      "data": false,
      "valid": false
    },
    {
      "description": "Invalid type - null",
      "data": null,
      "valid": false
    },
    {
      "description": "Invalid type - array",
      "data": [],
      "valid": false
    },
    {
      "description": "Invalid type - object",
      "data": {},
      "valid": false
    },
    {
      "description": "Valid - empty weak ETag",
      "data": "W/\"\"",
      "valid": true
    },
    {
      "description": "Valid - simple alphanumeric",
      "data": "W/\"abc123\"",
      "valid": true
    },
    {
      "description": "Valid - hex string",
      "data": "W/\"686897696a7c876b7e\"",
      "valid": true
    },
    {
      "description": "Valid - with hyphens",
      "data": "W/\"abc-123-def\"",
      "valid": true
    },
    {
      "description": "Valid - with underscores",
      "data": "W/\"abc_123_def\"",
      "valid": true
    },
    {
      "description": "Valid - with dots",
      "data": "W/\"version.1.2.3\"",
      "valid": true
    },
    {
      "description": "Valid - with exclamation mark",
      "data": "W/\"abc!123\"",
      "valid": true
    },
    {
      "description": "Valid - with various symbols",
      "data": "W/\"#$%&*+:;=?@[]^{|}~\"",
      "valid": true
    },
    {
      "description": "Valid - uppercase letters",
      "data": "W/\"ABCDEFGHIJKLMNOPQRSTUVWXYZ\"",
      "valid": true
    },
    {
      "description": "Valid - lowercase letters",
      "data": "W/\"abcdefghijklmnopqrstuvwxyz\"",
      "valid": true
    },
    {
      "description": "Valid - all digits",
      "data": "W/\"0123456789\"",
      "valid": true
    },
    {
      "description": "Valid - mixed case and symbols",
      "data": "W/\"aBc-123_DeF.456\"",
      "valid": true
    },
    {
      "description": "Valid - long value",
      "data": "W/\"aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa\"",
      "valid": true
    },
    {
      "description": "Invalid - strong ETag (missing W/ prefix)",
      "data": "\"abc123\"",
      "valid": false
    },
    {
      "description": "Invalid - lowercase w",
      "data": "w/\"abc123\"",
      "valid": false
    },
    {
      "description": "Invalid - missing slash after W",
      "data": "W\"abc123\"",
      "valid": false
    },
    {
      "description": "Invalid - space after W",
      "data": "W /\"abc123\"",
      "valid": false
    },
    {
      "description": "Invalid - space before W",
      "data": " W/\"abc123\"",
      "valid": false
    },
    {
      "description": "Invalid - missing opening quote",
      "data": "W/abc123\"",
      "valid": false
    },
    {
      "description": "Invalid - missing closing quote",
      "data": "W/\"abc123",
      "valid": false
    },
    {
      "description": "Invalid - no quotes",
      "data": "W/abc123",
      "valid": false
    },
    {
      "description": "Invalid - single quotes",
      "data": "W/'abc123'",
      "valid": false
    },
    {
      "description": "Invalid - space inside value",
      "data": "W/\"abc 123\"",
      "valid": false
    },
    {
      "description": "Invalid - tab character",
      "data": "W/\"abc\t123\"",
      "valid": false
    },
    {
      "description": "Invalid - newline character",
      "data": "W/\"abc\n123\"",
      "valid": false
    },
    {
      "description": "Invalid - carriage return",
      "data": "W/\"abc\r123\"",
      "valid": false
    },
    {
      "description": "Invalid - null byte",
      "data": "W/\"abc\u0000123\"",
      "valid": false
    },
    {
      "description": "Invalid - control character",
      "data": "W/\"abc\u0001123\"",
      "valid": false
    },
    {
      "description": "Invalid - quote inside value",
      "data": "W/\"abc\"123\"",
      "valid": false
    },
    {
      "description": "Invalid - empty string",
      "data": "",
      "valid": false
    },
    {
      "description": "Invalid - just W/",
      "data": "W/",
      "valid": false
    },
    {
      "description": "Invalid - W/ with space in quotes",
      "data": "W/\" \"",
      "valid": false
    }
  ]
}
